//********** LCD CONEXION DEL MODULO
sbit LCD_RS at RB0_bit;
sbit LCD_EN at RB1_bit;

sbit LCD_D4 at RB2_bit;
sbit LCD_D5 at RB3_bit;
sbit LCD_D6 at RB4_bit;
sbit LCD_D7 at RB5_bit;

//********** DIRECCION DE PINES
sbit LCD_RS_Direction at TRISB0_bit;
sbit LCD_EN_Direction at TRISB1_bit;

sbit LCD_D4_Direction at TRISB2_bit;
sbit LCD_D5_Direction at TRISB3_bit;
sbit LCD_D6_Direction at TRISB4_bit;
sbit LCD_D7_Direction at TRISB5_bit;

//********** VARIABLES Y CONSTANTES
const int Canal_Sensor1 = 1; // define canal del sensor (AN1)

int t1;

char text1[6];

//*************** FUNCIONES
int Temperatura(int CanalSensor){
/* calcula la Temperatura del sensor en°C, 
se ingresa el canal del sensor */
     
     // conversiones del valor obtenido del sensor
     float Val_Sensor_Bits=ADC_Read(CanalSensor); //sensa entrada y convierte a Digital 0v = 0: 5v = 1023;
     
     float Val_Sensor_Volts= Val_sensor_Bits * 5000 / 1023; //Convierte el valor digital en voltajes (miliVoltios)
     
     float Val_Sensor_Grados=(Val_Sensor_Volts - 500) / 10; //Convierte el valor del voltaje(miliVoltios) en °C

     // correccion de salida
     int parte_entera= Val_Sensor_Grados; // obtiene la parte entera del valor °C
     
     float parte_decimal= fabs(Val_Sensor_Grados - parte_entera); //obtiene la parte decimal del valor °C
     
     if (parte_entera>=0){ //para numeros positivos
           if(parte_decimal>0.5){ parte_entera+=1;}  // si la parte decimal es mayor a 0.5 se le suma 1 al entero
     }else{               //para numeros negativos
           if(parte_decimal>0.5){ parte_entera-=1;} // se le resta 1
     }
     //salida
     return parte_entera;  // devuelve la parte entera, o sea los °C
}

//********** PRINCIPAL
void main() {
     // PUERTO A
     TRISA = 0b00000010; //salida=0 : entrada=1
     ANSELA= 0b00000010; //digital=0 : analogico=1
     PORTA = 0b00000000; //sin tension=0 : tension=1

     // PUERTO B ----- para prueba sensor temperatura
     TRISB = 0b00000000;
     ANSELB= 0b00000000;
     PORTB = 0b00000000;

     // DISPLAY
     LCD_Init(); // inicializa el LCD
     LCD_Cmd(_LCD_CLEAR); //limpia el LCD
     LCD_Cmd(_LCD_CURSOR_OFF); // borra el cursor

     // LOOP DE EJECUCION
     while(1){
     
         t1= temperatura(Canal_Sensor1);

         IntToStr(t1, text1);

         LCD_Out(1,1,text1);//se mmuestra en pantalla el valor de la temp
     }

}
